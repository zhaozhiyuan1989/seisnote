
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "pygmtdoc/plot_04_coastline.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_pygmtdoc_plot_04_coastline.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_pygmtdoc_plot_04_coastline.py:


绘制海岸线
======================

PyGMT 利用 :meth:`pygmt.Figure.coast` 方法绘制海岸线，
该方法不仅可以绘制海岸线和湖岸线，还可以绘制比例尺和行政边界等。

.. note::

    可结合《:doc:`gmtdoc:tutorial/coastline`》
    和《:doc:`gmtdoc:module/coast` 模块》学习。

.. GENERATED FROM PYTHON SOURCE LINES 14-17

.. code-block:: default


    import pygmt








.. GENERATED FROM PYTHON SOURCE LINES 18-22

海岸线
----------

使用 ``shorelines`` 选项绘制海岸线：

.. GENERATED FROM PYTHON SOURCE LINES 22-28

.. code-block:: default


    fig = pygmt.Figure()
    fig.basemap(region="g", projection="W15c", frame=True)
    fig.coast(shorelines=True)
    fig.show()




.. image:: /pygmtdoc/images/sphx_glr_plot_04_coastline_001.png
    :alt: plot 04 coastline
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 30-40

海岸线分为四个等级（ *level* 取 1-4）：

1. coastline：海岸线
2. lakeshore：湖泊与陆地的岸线
3. island-in-lake shore：首先要有陆地，陆地中有个湖，湖里有个岛。即岛的岸线
4. lake-in-island-in-lake shore：首先有陆地，陆地中有个湖，湖中有个岛，岛里又有个湖。这里指的是湖的岸线

海岸线绘制效果由级别参数 *level* 和画笔参数 *pen* 共同决定。
下图绘制了岸线级别 *level* 为 ``1``\ ，
画笔参数 *pen* 为 ``0.5p/black`` 的全球海岸线样式：

.. GENERATED FROM PYTHON SOURCE LINES 40-46

.. code-block:: default


    fig = pygmt.Figure()
    fig.basemap(region="g", projection="W15c", frame=True)
    fig.coast(shorelines="1/0.5p,black")
    fig.show()




.. image:: /pygmtdoc/images/sphx_glr_plot_04_coastline_002.png
    :alt: plot 04 coastline
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 47-48

允许通过列表形式一次性传递多个不同等级海岸线的绘制参数：

.. GENERATED FROM PYTHON SOURCE LINES 48-54

.. code-block:: default


    fig = pygmt.Figure()
    fig.basemap(region="g", projection="W15c", frame=True)
    fig.coast(shorelines=["1/1p,black", "2/0.5p,red"])
    fig.show()




.. image:: /pygmtdoc/images/sphx_glr_plot_04_coastline_003.png
    :alt: plot 04 coastline
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 55-62

海岸线数据分为 5 个不同精度版本，通过 ``resolution`` 选项指定要使用的数据精度：

1. ``"c"``: crude
2. ``"l"``: low (default)
3. ``"i"``: intermediate
4. ``"h"``: high
5. ``"f"``: full

.. GENERATED FROM PYTHON SOURCE LINES 62-70

.. code-block:: default


    oahu = [-158.3, -157.6, 21.2, 21.8]
    fig = pygmt.Figure()
    for res in ["c", "l", "i", "h", "f"]:
        fig.coast(resolution=res, shorelines="1p", region=oahu, projection="M5c")
        fig.shift_origin(xshift="5c")
    fig.show()




.. image:: /pygmtdoc/images/sphx_glr_plot_04_coastline_004.png
    :alt: plot 04 coastline
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 71-72

使用 ``land`` 和 ``water`` 选项可以指定如何填充陆地与水体：

.. GENERATED FROM PYTHON SOURCE LINES 72-78

.. code-block:: default


    fig = pygmt.Figure()
    fig.basemap(region="g", projection="W10i", frame=True)
    fig.coast(land="#666666", water="skyblue")
    fig.show()




.. image:: /pygmtdoc/images/sphx_glr_plot_04_coastline_005.png
    :alt: plot 04 coastline
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 79-89

行政边界
--------------------

利用 ``borders`` 选项可以绘制国界、州界等行政边界，可供选择的参数有：

1. ``"1"``: National boundaries
2. ``"2"``: State boundaries within the Americas
3. ``"3"``: Marine boundaries
4. ``"a"``: All boundaries (1-3)


.. GENERATED FROM PYTHON SOURCE LINES 89-96

.. code-block:: default


    import pygmt

    fig = pygmt.Figure()
    fig.basemap(region=[-150, -30, -60, 60], projection="I-90/8c", frame="afg")
    # 用不同的颜色绘制不同等级的行政边界
    fig.coast(borders=["1/0.5p,black", "2/0.5p,red", "3/0.5p,blue"], land="gray")
    fig.show()


.. image:: /pygmtdoc/images/sphx_glr_plot_04_coastline_006.png
    :alt: plot 04 coastline
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.398 seconds)


.. _sphx_glr_download_pygmtdoc_plot_04_coastline.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_04_coastline.py <plot_04_coastline.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_04_coastline.ipynb <plot_04_coastline.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
